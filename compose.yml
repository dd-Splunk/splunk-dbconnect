services:
  so1:
    networks:
      splunknet:
    image: splunk/splunk:${SPLUNK_IMAGE:-latest}
    container_name: so1
    platform: linux/amd64
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_APPS_URL
      - SPLUNKBASE_USERNAME
      - SPLUNKBASE_PASSWORD
      - SPLUNK_PASSWORD
      - JAVA_VERSION=openjdk:11
      - TZ=${TZ}
    ports:
      - 8000:8000
      - 8089:8089
      - 9998:9998
      - 9999:9999
    volumes:
      - so1-var:/opt/splunk/var
      - so1-etc:/opt/splunk/etc
    restart: always

  so1-init:
    networks:
      splunknet:
    build: ./configs/docker/
    platform: linux/amd64
    environment:
      - SPLUNK_USER
      - SPLUNK_PASSWORD
      - DB_NAME
      - DB_USER_NAME
      - DB_USER_PASSWORD
    depends_on:
      so1:
        condition: service_healthy
        restart: true

  db:
    networks:
      splunknet:
    image: mysql:latest
    restart: always
    environment:
      TZ: ${TZ}
      MYSQL_RANDOM_ROOT_PASSWORD: true
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER_NAME}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/my.cnf:/etc/mysql/my.cnf

networks:
  splunknet:
    driver: bridge
    attachable: true

volumes:
  so1-var:
  so1-etc:
  db-data:
